#!/usr/bin/with-contenv bash
# shellcheck shell=bash

mkdir -p \
    /app/www/log \
    /app/www/tmp

lsiown -R abc:abc \
    /app/www/log \
    /app/www/tmp

printf %s "$(cat /app/www/GIT_SHA)" > /run/s6/container_environment/GIT_SHA

# Remove old pid in the event of an unclean shutdown
if [[ -f /app/www/tmp/pids/server.pid ]]; then
    rm /app/www/tmp/pids/server.pid
fi

DB_SCHEME=$(awk -F":" '{print $1}' <<<"${DATABASE_URL}")

if [[ ${DB_SCHEME} = "sqlite" ]]; then
    DB_PATH=$(awk -F":" '{print $2}' <<<"${DATABASE_URL}")
    touch "${DB_PATH}"
elif [[ ${DB_SCHEME} = "postgresql" ]]; then
    DB_HOST=$(awk -F"@|:" '{print $4}' <<<"${DATABASE_URL}")
    DB_PORT=$(awk -F"@|/" '{print $6}' <<<"${DATABASE_URL}")
    if [[ ! ${DB_PORT} =~ [0-9]+ ]]; then DB_PORT=5432; fi
    echo "Waiting for DB to be available"
    END=$((SECONDS + 30))
    while [[ ${SECONDS} -lt ${END} ]] && [[ -n "${DB_HOST+x}" ]]; do
        if pg_isready -h "${DB_HOST}" -p "${DB_PORT}" -q; then
            if [[ ! -f /dbwait.lock ]]; then
                sleep 5
            fi
            touch /dbwait.lock
            break
        else
            sleep 1
        fi
    done
elif [[ ${DB_SCHEME} = "mysql2" ]]; then
    DB_HOST=$(awk -F"@|:" '{print $4}' <<<"${DATABASE_URL}")
    DB_PORT=$(awk -F"@|/" '{print $6}' <<<"${DATABASE_URL}")
    if [[ ! ${DB_PORT} =~ [0-9]+ ]]; then DB_PORT=3306; fi
    echo "Waiting for DB to be available"
    END=$((SECONDS + 30))
    while [[ ${SECONDS} -lt ${END} ]] && [[ -n "${DB_HOST+x}" ]]; do
        if [[ $(/usr/bin/nc -w1 "${DB_HOST}" "${DB_PORT}" | tr -d '\0') ]]; then
            if [[ ! -f /dbwait.lock ]]; then
                sleep 5
            fi
            touch /dbwait.lock
            break
        else
            sleep 1
        fi
    done
else
    DATABASE_URL=sqlite3:/config/manyfold.sqlite3
    echo "**** Missing or invalid DATABASE_URL, defaulting to sqlite. ****"
fi

cd /app/www/ || exit 1

s6-setuidgid abc /usr/bin/bundle exec rails db:prepare:with_data

lsiown -R abc:abc \
    /config
